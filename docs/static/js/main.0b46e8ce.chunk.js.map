{"version":3,"sources":["components/Header.js","components/Footer.js","components/HomePage.js","components/Settings.js","components/Button.js","components/TreatmentPage.js","components/TreatmentPageList.js","components/TreatmentRegister.js","components/AppointmentPage.js","components/AppointmentsList.js","components/MedicationCalculator/Header.js","components/MedicationCalculator/MedicationName.js","components/MedicationCalculator/MedicationColorSelector.js","components/MedicationCalculator/MedicationInstruction.js","components/MedicationCalculator/MedicationStartTiming.js","components/MedicationCalculator/ExampleGuideline.js","components/MedicationCalculator/MedicationCalculator.js","components/Navigator.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","className","alt","src","Footer","target","rel","href","HomePage","Settings","props","medicationRegistered","samesite","map","item","color","name","renderMedicationRegistered","Button","classButton","nameButton","actionButton","disabled","onClick","TreatmentPage","classImage","image","titlePage","vowelsAndConsonants","to","TreatmentPageList","flareTreatment","medicationName","sort","a","b","date","listDays","day","index","includes","push","getDate","monthIndex","getMonth","year","getFullYear","formatDate","Date","key","treatment","time","pill","renderListTreatment","TreatmentRegister","state","newMedication","buttonClickable","errorMessage","renderMedicationSelector","bind","handleNewMedication","regirterNewMedication","handleDeleteNewMedication","handleSaveMedication","handleClassButton","renderErrorMessage","actionSaveButton","renderNewMedicationName","medicationsTreatment","medication","value","event","currentTarget","this","setState","htmlFor","type","id","onChange","today","dd","String","padStart","mm","yyyy","alert","undefined","includeNewTreatment","React","Component","AppointmentPage","AppointmentsList","renderMonthName","MedicationName","placeholder","getInfoState","MedicationColorSelector","colorSelected","MedicationInstruction","medicationInstruction","MedicationStartTiming","firstDose","hours","i","hour","hourWithPad","ExampleGuideline","info","App","localStorageData","getData","_getInitialState","saveData","getDays","getHoursMedication","JSON","parse","localStorage","getItem","setItem","stringify","dayHours","dayHoursMedication","dayHoursList","parseInt","doses","numberOfDoses","dose","hoursNeed","listTimes","forEach","user","goodTime","infoState","timesMedication","actionColorSelector","Navigator","namePill","toLowerCase","newState","e","find","listMedication","object","newTreatment","listUpdated","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0b46e8ce.chunk.js","sourcesContent":["import React from 'react';\nimport \"../stylesheets/Header.scss\"\n\n\nconst Header = () => {\n    return (\n        <header className=\"header\">\n            My Health Log <img alt=\"website logo\" src=\"../images/heart.png\" className=\"heartLogo\"></img>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport '../stylesheets/Footer.scss';\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p> &copy; 2019 / <a className=\"footer_link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/laurapareja/\">Laura Pareja</a>/ Licencia</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Footer from './Footer';\n\nimport '../stylesheets/HomePage.scss'\n\nconst HomePage = () => {\n\n    return (\n        <div className=\"homeMain\">\n            <img src=\"https://laurapareja.github.io/My-Health-Log/images/wallpaper.png\" alt=\"homewallpaper\" className=\"homepage_img\"></img>\n        </div >\n    )\n}\n\nexport default HomePage;","import React from 'react';\n// import { Link } from \"react-router-dom\";\n// import Button from './Button';\nimport \"../stylesheets/Settings.scss\"\n\n\nconst renderMedicationRegistered = (medicationRegistered) => {\n    return medicationRegistered.medicationRegistered.map(item => {\n        return (\n            <div className=\"medicationContainer\">\n                <div className={`color ${item.color}`}></div>\n                <h4>{item.name}</h4>\n            </div>\n        )\n    })\n}\n\n\nconst Settings = (props) => {\n    const medicationRegistered = props;\n    return (\n        <div className=\"settings\">\n            <i className=\"fas fa-cog iconSettings\" samesite=\"none\"></i>\n            <h2 className=\"settings_title\">Settings</h2>\n            <h3 className=\"settings_title\">Medication Registered</h3>\n            {renderMedicationRegistered(medicationRegistered)}\n            {/* <Link to=\"/My-Health-Log/appointments\">\n                <Button nameButton=\"Back\" classButton={`treatmentPage_button buttonAppointment`} />\n            </Link> */}\n        </div >\n    )\n}\n\nexport default Settings;","import React from 'react';\n\nconst Button = (props) => {\n    const { classButton, nameButton, actionButton, disabled } = props;\n    return (\n        <button className={`button ${classButton}`} onClick={actionButton} disabled={disabled}>{nameButton}</button>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\nconst vowelsAndConsonants = (s) => {\n    //\n}\n\nconst TreatmentPage = (props) => {\n    const { classImage, image, titlePage } = props;\n\n    return (\n        <div className=\"main\">\n            {vowelsAndConsonants(\"javascriptloops\")}\n            <img src={image} alt=\"pill\" className={classImage}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n            <h3 className=\"main_subtitle\">Here you can register and see your flare-ups treatment</h3>\n            <div className=\"treatmentPage_button--container\">\n                <Link to=\"/My-Health-Log/treatmentList\">\n                    <Button nameButton=\"TREATMENT LIST\" classButton=\"treatmentPage_button\" />\n                </Link>\n                <Link to=\"/My-Health-Log/treatment/register\">\n                    <Button nameButton=\"REGISTER\" classButton=\"treatmentPage_button\" />\n                </Link>\n            </div>\n        </div >\n    )\n}\n\nexport default TreatmentPage;","import React from 'react';\nimport Footer from './Footer';\nimport \"../stylesheets/TreatmentPage.scss\"\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst renderListTreatment = (flareTreatment, medicationName) => {\n    flareTreatment.sort(function (a, b) {\n        if (a.date < b.date) {\n            return 1;\n        }\n        if (a.date > b.date) {\n            return -1;\n        }\n        return 0;\n    });\n    const listDays = [];\n\n    return flareTreatment.map((day, index) => {\n        if (listDays.includes(day.date) === false) {\n            listDays.push(day.date)\n            const formatDate = (date) => {\n                var monthNames = [\n                    \"January\", \"February\", \"March\",\n                    \"April\", \"May\", \"June\", \"July\",\n                    \"August\", \"September\", \"October\",\n                    \"November\", \"December\"\n                ];\n\n                var day = date.getDate();\n                var monthIndex = date.getMonth();\n                var year = date.getFullYear();\n\n                return day + ' ' + monthNames[monthIndex] + ' ' + year;\n            }\n            const date = formatDate(new Date(day.date))\n            return (\n                <div className=\"medication_dose--container\" key={index} >\n                    <h3 className=\"dateListItem\">{date}</h3>\n                    <div className=\"pillContainer\">\n                        <h4 className=\"doseTime\">{day.treatment[0].time} </h4>\n                        <div className=\"pill yellow\" ></div> <p className=\"pillName\">\n                            {day.treatment[0].pill}\n                        </p>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"medication_dose--container\" key={index} >\n                    <div className=\"pillContainer\">\n                        <h4 className=\"doseTime\">{day.treatment[0].time} </h4>\n                        <div className=\"pill yellow\" ></div> <p className=\"pillName\">\n                            {day.treatment[0].pill}\n                        </p>\n                    </div>\n                </div>\n            )\n        }\n    })\n}\n\n\n\nconst TreatmentPageList = (props) => {\n    const { flareTreatment, titlePage, image, classImage, medicationName } = props\n    return (\n        <div className=\"main\" >\n            <img src={image} alt=\"pill\" className={`treatmentPageListImp ${classImage}`}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n\n            <div>{renderListTreatment(flareTreatment, medicationName)}</div>\n\n            <Link to=\"/My-Health-Log/treatment\">\n                <Button nameButton=\"Back\" classButton=\"treatmentPage_button\" />\n            </Link>\n            <Footer />\n        </div>\n    )\n}\n\nexport default TreatmentPageList;\n","import React from 'react';\nimport Footer from './Footer';\nimport \"../stylesheets/TreatmentRegister.scss\"\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\nclass TreatmentRegister extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newMedication: false,\n            date: \"\",\n            time: \"\",\n            medicationName: \"\",\n            buttonClickable: true,\n            errorMessage: true,\n        }\n        this.renderMedicationSelector = this.renderMedicationSelector.bind(this);\n        this.handleNewMedication = this.handleNewMedication.bind(this);\n        this.regirterNewMedication = this.regirterNewMedication.bind(this);\n        this.handleDeleteNewMedication = this.handleDeleteNewMedication.bind(this);\n        this.handleSaveMedication = this.handleSaveMedication.bind(this);\n        this.handleClassButton = this.handleClassButton.bind(this);\n        this.renderErrorMessage = this.renderErrorMessage.bind(this);\n        this.actionSaveButton = this.actionSaveButton.bind(this);\n        this.renderNewMedicationName = this.renderNewMedicationName.bind(this);\n    }\n\n\n    renderMedicationSelector(medicationsTreatment) {\n        if (medicationsTreatment !== \"\") {\n            return medicationsTreatment.map((medication, index) => {\n                return <option key={index} name={medication.name} value={medication.name}>{medication.name}</option>\n            })\n        }\n\n    }\n    handleNewMedication(event) {\n        if (event.currentTarget.value === 'newMedication') {\n            return this.setState({\n                newMedication: true,\n            })\n        }\n    }\n    renderNewMedicationName(event) {\n        return this.setState({\n            medicationName: event.currentTarget.value,\n        })\n    }\n\n    regirterNewMedication() {\n        if (this.state.newMedication === true) {\n            return (\n                <div>\n                    <div className=\"inputMedicationTreatment_container \">\n                        <label htmlFor=\"medicationTreatment\" className=\"treatmentLabel\">Register new medication</label >\n                        <div className=\"inputContainerMedication\">\n\n                            <input type=\"text\" id=\"medicationTreatment\" className=\"inputTreatment\" onChange={this.renderNewMedicationName}></input>\n                            <i className=\"far fa-trash-alt iconInput iconInput_trash\" onClick={this.handleDeleteNewMedication}></i>\n                        </div>\n\n                    </div>\n                </div>)\n        }\n    }\n    handleSaveMedication(event) {\n        if (event.target.type === \"date\") {\n            let today = new Date();\n            const dd = String(today.getDate()).padStart(2, '0');\n            const mm = String(today.getMonth() + 1).padStart(2, '0');\n            const yyyy = today.getFullYear();\n\n            today = yyyy + '-' + mm + '-' + dd;\n\n            if (event.target.value <= today) {\n                this.setState({\n                    date: event.target.value,\n                })\n            } else {\n                alert('future dates are not available')\n                event.target.value = \"\";\n            }\n\n        } else if (event.target.type === \"time\") {\n            this.setState({\n                time: event.target.value,\n            })\n        } else {\n            this.setState({\n                medicationName: event.target.value,\n                errorMessage: false,\n                buttonClickable: false\n            })\n        }\n    }\n\n    handleClassButton() {\n        if (this.state.date === \"\" || this.state.date === undefined || this.state.time === \"\" || this.state.medicationName === \"\") {\n            return \"treatmentRegister_button--disable\"\n        } else {\n            return \"treatmentRegister_button--able\"\n        }\n    }\n\n    renderErrorMessage() {\n        if (this.state.errorMessage === true) {\n            return <div>Please complete all options</div>\n        }\n    }\n\n    handleDeleteNewMedication() {\n        this.setState({\n            newMedication: false\n        })\n    }\n\n    actionSaveButton(includeNewTreatment, state) {\n        if (this.state.buttonClickable === false) {\n            return includeNewTreatment(state)\n        }\n    }\n\n    render() {\n        const {\n            props,\n        } = this;\n\n        const { image, classImage, medicationName, includeNewTreatment } = props\n\n        return (\n            <div className=\"main\" >\n                <img src={image} alt=\"pill\" className={`treatmentPageListImp ${classImage}`}></img>\n                <h2 className=\"main_title\">New Treatment</h2>\n                <form className=\"form\" onChange={this.handleSaveMedication}>\n                    <div className=\"inputDateTreatment_container\">\n                        <label htmlFor=\"dateTreatment\" className=\"treatmentLabel\">Date</label >\n                        <div className=\"inputContainer\">\n                            <i className=\"far fa-calendar-plus iconInput\"></i>\n                            <input type=\"date\" id=\"dateTreatment\" className=\"inputTreatment\" ></input>\n                        </div>\n                    </div>\n                    <div className=\"inputDateTreatment_container\">\n                        <label htmlFor=\"timeTreatment\" className=\"treatmentLabel\">Time</label>\n                        <div className=\"inputContainer\">\n                            <i className=\"far fa-clock iconInput\"></i>\n                            <input type=\"time\" id=\"timeTreatment\" className=\"inputTreatment inputTreatment_Time\" ></input>\n                        </div>\n                    </div>\n                    <div className=\"inputDateTreatment_container\">\n                        <label htmlFor=\"selectMedication\" className=\"treatmentLabel\">Medication</label>\n                        <div className=\"inputContainer\">\n                            <i className=\"fas fa-tablets iconInput\"></i>\n                            <select name=\"selectMedication\" id=\"selectMedication\" className=\"inputTreatment\" onChange={this.handleNewMedication} >\n                                <option name=\"\" value=\"\"></option>\n                                {this.renderMedicationSelector(medicationName)}\n                                <option name=\"newMedication\" value=\"newMedication\">new medication</option>\n                            </select>\n                        </div>\n                    </div>\n                    {this.regirterNewMedication()}\n                </form>\n\n                {this.renderErrorMessage()}\n                <Link to=\"/My-Health-Log/treatment\">\n                    <Button\n                        nameButton=\"Save\"\n                        classButton={this.handleClassButton()}\n                        actionButton={this.actionSaveButton(includeNewTreatment, this.state)}\n                        disabled={this.state.buttonClickable} />\n                </Link>\n\n                <Link to=\"/My-Health-Log/treatment\">\n                    <Button nameButton=\"Back\" classButton=\"treatmentPage_button\" />\n                </Link>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default TreatmentRegister;","import React from 'react';\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst AppointmentPage = (props) => {\n    const { classImage, image, titlePage } = props;\n\n    return (\n        <div className=\"main\">\n            <img src={image} alt=\"pill\" className={classImage}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n            <h3 className=\"main_subtitle\">Here you can register and see your doctor appointments</h3>\n            <div className=\"treatmentPage_button--container\">\n                <Link to=\"/My-Health-Log/appointmentsList\">\n                    <Button nameButton=\"APPOINTMENT LIST\" classButton=\"treatmentPage_button\" />\n                </Link>\n                <Button nameButton=\"REGISTER\" classButton=\"treatmentPage_button\" />\n            </div>\n        </div >\n    )\n}\n\nexport default AppointmentPage;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from './Button';\nimport \"../stylesheets/Appointments.scss\"\n\nconst AppointmentsList = (props) => {\n    const { renderMonthName, classImage, image, titlePage } = props;\n\n    return (\n        <div className=\"main appointments\">\n            <img src={image} alt=\"appointment\" className={`treatmentPageListImp ${classImage}`}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n            {renderMonthName}\n            <ul>\n                <li>Monday 21 October</li>\n                <li>Tuesday 22 October</li>\n                <li>Wednesday 23 October</li>\n                <li>Thursday 24 October</li>\n            </ul>\n            <Link to=\"/My-Health-Log/appointments\">\n                <Button nameButton=\"Back\" classButton={`treatmentPage_button buttonAppointment`} />\n            </Link>\n        </div >\n    )\n}\n\nexport default AppointmentsList;","import React from 'react';\n\nconst Header = (props) => {\n    const image = props.image;\n    return (\n        <header className=\"headerCalculator\">\n            <img className=\"calculator_picture\" src={image} ></img>\n            <h2 className=\"main_title\">Doses Calculator</h2>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst MedicationName = (props) => {\n    const { medicationName } = props;\n    const handleChange = (event) => {\n        const medicationName = 'medicationName';\n        props.getInfoState(event, medicationName)\n    }\n    return (\n        <main className=\"medicationName\">\n            <label className=\"inputContent\" htmlFor=\"medicationName\">Medication Name</label>\n            <input type=\"text\" id=\"medicationName\" placeholder=\"Name\" onChange={handleChange} value={medicationName}></input>\n        </main>\n    )\n}\n\nexport default MedicationName;","import React from 'react';\n\nconst MedicationColorSelector = (props) => {\n    const colorSelected = props.colorSelected;\n    const handleChange = (event) => {\n        const colorSelected = 'colorSelected';\n        props.getInfoState(event, colorSelected)\n    }\n    return (\n        <div className=\"inputContainer\">\n            <label className=\"inputContent\" htmlFor=\"medicationColor\">\n                Select a color\n            </label>\n            <select name=\"colors\" id=\"medicationColor\" onChange={handleChange} className={`${colorSelected} colorselector`} value={colorSelected}>\n                <option value=\"blue\" className=\"blue colorselector\"></option>\n                <option value=\"yellow\" className=\"yellow colorselector\" ></option>\n                <option value=\"orange\" className=\"orange colorselector\"></option>\n                <option value=\"purple\" className=\"purple colorselector\"></option>\n                <option value=\"green\" className=\"green colorselector\"></option>\n                <option value=\"red\" className=\"red colorselector\"></option>\n            </select>\n        </div>\n    )\n}\n\nexport default MedicationColorSelector;","import React from 'react';\n\nconst MedicationInstruction = (props) => {\n    const medicationInstruction = props.medicationInstruction;\n    const handleChange = (event) => {\n        const medicationInstruction = 'medicationInstruction';\n        props.getInfoState(event, medicationInstruction)\n    }\n    return (\n        <div className=\"inputContainer\">\n            <label htmlFor=\"medicationInstruction\" className=\"inputContent\">each</label>\n            <select name=\"guidelineDose\" id=\"guidelineDose\" onChange={handleChange} value={medicationInstruction}>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"6\">6</option>\n                <option value=\"8\">8</option>\n                <option value=\"12\">12</option>\n                <option value=\"24\">24</option>\n            </select>\n            <label htmlFor=\"medicationInstruction\">    hours</label>\n        </div>\n    )\n}\n\nexport default MedicationInstruction;","import React from 'react';\n\n\n\nconst MedicationStartTiming = (props) => {\n    const firstDose = props.firstDose;\n\n    const handleChange = (event) => {\n        const firstDose = 'firstDose';\n        props.getInfoState(event, firstDose)\n    }\n\n    const hours = []\n    for (let i = 0; i <= 24; i++) {\n        hours.push(i)\n    }\n\n    return (\n        <div className=\"inputContainer\" >\n            <label className=\"inputContent\" htmlFor=\"startTiming\">First Dose</label>\n            <select name=\"startTiming\" id=\"startTiming\" onChange={handleChange} value={firstDose}>\n                {hours.map((hour, index) => {\n                    let hourWithPad = `${hour}`\n                    if (hour < 10) {\n                        hourWithPad = `0${hour}`\n                    }\n                    return (<option key={index} value={hour}>{hourWithPad}:00</option>)\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default MedicationStartTiming;","import React from 'react';\n\nconst ExampleGuideline = (props) => {\n    const { info, color, medicationName } = props;\n    const renderName = (props) => {\n\n        if (info !== undefined) {\n            const name = info.map((time, index) => {\n                if (time < 10) {\n                    return (\n                        <div key={index} className=\"example__time--container\">\n                            <h4>0{time}:00 </h4>\n                            <div className={`hour ${color}`}></div>\n                            {medicationName}\n                        </div>\n                    )\n                } else {\n                    return (\n                        <div key={index} className=\"example__time--container\">\n                            <h4>{time}:00 </h4>\n                            <div className={`hour ${color}`}></div>\n                            {medicationName}\n                        </div>\n                    )\n                }\n            })\n            return name\n\n        } else if (info === undefined) {\n            return <div>No content</div>\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"example__container\">\n                {renderName()}\n            </div>\n        </div>\n    )\n}\n\nexport default ExampleGuideline;","import React from \"react\";\nimport Header from \"./Header\";\nimport MedicationName from \"./MedicationName\";\nimport MedicationColorSelector from \"./MedicationColorSelector\";\n// import MedicationQuantitySelector from \"./MedicationQuantitySelector\";\nimport MedicationInstruction from \"./MedicationInstruction\";\nimport MedicationStartTiming from \"./MedicationStartTiming\";\nimport ExampleGuideline from \"./ExampleGuideline\";\nimport \"../../stylesheets/MedicationCalculator.scss\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const localStorageData = this.getData();\n    this.state = localStorageData === null\n      ? this._getInitialState()\n      : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n\n    this.getDays = this.getDays.bind(this);\n    this.getHoursMedication = this.getHoursMedication.bind(this);\n    this.getInfoState = this.getInfoState.bind(this);\n\n  }\n  componentDidMount() {\n    this.getDays();\n    this.saveData();\n\n  }\n  //obtengo los datos del localstorage\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoMedication\"));\n  }\n  //guardo los datos en el localstorage\n  saveData() {\n    localStorage.setItem(\"infoMedication\", JSON.stringify(this.state));\n  }\n\n\n  _getInitialState() {\n    return {\n      dayHours: [],\n      dayHoursMedication: [],\n      medicationName: \"\",\n      firstDose: '',\n      medicationInstruction: '',\n      colorSelected: \"\"\n    }\n  }\n\n  getDays() {\n    let dayHoursList = [];\n    for (let hour = 1; hour < 24; hour++) {\n      dayHoursList.push(hour);\n    }\n    return this.setState({\n      dayHours: dayHoursList\n    },\n      //guardo en localstorage\n      this.saveData\n    )\n  }\n  getHoursMedication() {\n\n    if (this.state.firstDose !== \"\" && this.state.medicationInstruction !== \"\") {\n      const firstDose = parseInt(this.state.firstDose);\n      const medicationInstruction = parseInt(this.state.medicationInstruction);\n      const doses = 24 / medicationInstruction;\n\n      let numberOfDoses = [];\n\n      for (let dose = 0; dose < doses; dose++) {\n        numberOfDoses.push(dose)\n      }\n\n      let hoursNeed = firstDose;\n      let listTimes = []\n\n      numberOfDoses.forEach((user) => {\n        if (user === 0) {\n          listTimes.push(hoursNeed)\n\n        } else {\n          const time = hoursNeed += medicationInstruction\n          if (time > 24) {\n            const goodTime = time - 24;\n            listTimes.push(goodTime)\n\n          } else {\n            listTimes.push(time)\n\n          }\n        }\n      })\n\n      return listTimes\n    }\n  }\n\n  getInfoState(event, infoState) {\n    this.setState({\n      [infoState]: event.currentTarget.value\n    },\n      //guardo en localstorage\n      this.saveData\n    )\n  }\n\n\n  render() {\n    const image = this.props.image;\n    const timesMedication = this.getHoursMedication()\n    const color = this.state.colorSelected;\n    const medicationName = this.state.medicationName;\n    this.props.actionColorSelector(color, medicationName);\n\n    return (\n      <div className=\"mainCalculator\">\n        <Header image={image} />\n        <div className=\"mainCalculator_content\">\n          <MedicationName getInfoState={this.getInfoState} medicationName={this.state.medicationName} />\n          <MedicationColorSelector getInfoState={this.getInfoState} colorSelected={this.state.colorSelected} />\n          {/* <MedicationQuantitySelector /> */}\n          <MedicationStartTiming getInfoState={this.getInfoState} firstDose={this.state.firstDose} />\n          <MedicationInstruction getInfoState={this.getInfoState} medicationInstruction={this.state.medicationInstruction} />\n\n          <ExampleGuideline\n            info={timesMedication}\n            color={this.state.colorSelected}\n            medicationName={this.state.medicationName}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/Navigator.scss\"\n\nconst Navigator = () => {\n    return (\n        <div className=\"navigator\">\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/\"><i className=\"fas fa-home icon\" samesite=\"none\"></i>\n                Home</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/treatment\"><i className=\"fas fa-pills icon\" samesite=\"none\"></i>Treatment</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/appointments\"><i className=\"fas fa-calendar-check icon\" samesite=\"none\"></i>Appointments</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/calculator\"><i className=\"fas fa-clock icon\" samesite=\"none\"></i>Doses Calculator</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/settings\"><i className=\"fas fa-cog icon\" samesite=\"none\"></i>Settings</Link>\n        </div>\n    )\n}\n\nexport default Navigator;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport HomePage from './HomePage';\nimport Settings from './Settings';\nimport TreatmentPage from \"./TreatmentPage\";\nimport TreatmentPageList from \"./TreatmentPageList\";\nimport TreatmentRegister from \"./TreatmentRegister\";\nimport AppointmentPage from './AppointmentPage';\nimport AppointmentsList from \"./AppointmentsList\";\nimport MedicationCalculator from './MedicationCalculator/MedicationCalculator';\nimport Navigator from './Navigator';\nimport Footer from './Footer';\n\nimport \"../stylesheets/App.scss\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const localStorageData = this.getData();\n    this.state = localStorageData === null\n      ? {\n        flareTreatment: [],\n        colorSelected: '',\n        medicationRegistered: [\n          {\n            \"name\": \"paracetamol\",\n            \"color\": \"blue\"\n          }, {\n            \"name\": \"ibuprofeno\",\n            \"color\": \"yellow\"\n          }]\n      }\n      : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n    this.actionColorSelector = this.actionColorSelector.bind(this);\n    this.includeNewTreatment = this.includeNewTreatment.bind(this);\n  }\n  componentDidMount() {\n    this.getData();\n    this.saveData();\n  }\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoMyHealthRegister\"));\n  }\n  saveData() {\n    localStorage.setItem(\"infoMyHealthRegister\", JSON.stringify(this.state));\n  }\n\n  actionColorSelector(color, namePill) {\n    if (this.state.colorSelected !== color) {\n      this.setState({\n        colorSelected: color,\n      }, this.saveData\n      )\n    }\n    const pill = namePill.toLowerCase()\n    if (this.state.medicationName !== pill) {\n      this.setState({\n        medicationName: pill,\n      }, this.saveData\n      )\n    }\n  }\n  includeNewTreatment(newState) {\n    return (e) => {\n      const date = newState.date;\n      const time = newState.time;\n      const medicationName = newState.medicationName;\n\n      const listMedications = this.state.medicationRegistered.map(medication => {\n        return medication.name\n      })\n      if (listMedications.find(medication => {\n        return medication === medicationName\n      }) === undefined) {\n        const listMedication = [...this.state.medicationRegistered]\n        const object = { \"name\": medicationName, \"color\": \"yellow\" }\n\n\n\n        listMedication.push(object)\n        return this.setState({\n          medicationRegistered: listMedication\n        }, this.saveData\n        )\n      }\n\n      const newTreatment =\n      {\n        \"date\": date,\n        \"treatment\": [\n          {\n            \"time\": time,\n            \"pill\": medicationName\n          }\n        ]\n      };\n\n      const listUpdated = [...this.state.flareTreatment]\n      listUpdated.push(newTreatment)\n\n      return this.setState({\n        flareTreatment: listUpdated\n      }, this.saveData\n      )\n    }\n  }\n  render() {\n    return (\n      <div className=\"body\" >\n        <Header />\n        <BrowserRouter>\n          <Route\n            exact\n            path=\"/My-Health-Log/\"\n            render={() => {\n              return <HomePage />;\n            }}\n          />\n          <Switch>\n            <Route\n              exact\n              path=\"/My-Health-Log/settings\"\n              render={() => {\n                return <Settings\n                  medicationRegistered={this.state.medicationRegistered}\n                />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/treatment\"\n              render={() => {\n                return <TreatmentPage\n                  titlePage=\"Treatment\"\n                  classImage=\"page_image\"\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/pills.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/treatmentList\"\n              render={() => {\n                return <TreatmentPageList\n                  flareTreatment={this.state.flareTreatment}\n                  titlePage=\"Treatment\"\n                  classImage=\"page_image\"\n                  medicationName={this.state.medicationRegistered}\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/pills.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/treatment/register\"\n              render={() => {\n                return <TreatmentRegister\n                  titlePage=\"Treatment\"\n                  classImage=\"page_image\"\n                  includeNewTreatment={this.includeNewTreatment}\n                  medicationName={this.state.medicationRegistered}\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/pills.png\" />;\n                ;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/appointments\"\n              render={() => {\n                return <AppointmentPage\n                  titlePage=\"Appointments\"\n                  classImage=\"page_image\"\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/doctorDates.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/appointmentsList\"\n              render={() => {\n                return <AppointmentsList\n                  titlePage=\"Appointments\"\n                  classImage=\"page_image\"\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/doctorDates.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/calculator\"\n              render={() => {\n                return <MedicationCalculator actionColorSelector={this.actionColorSelector}\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/alarm.png\" />;\n              }}\n            />\n          </Switch>\n          <Navigator />\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}