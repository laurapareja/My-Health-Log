{"version":3,"sources":["components/Header.js","components/HomePage.js","components/Settings.js","components/Button.js","components/TreatmentPage.js","components/Footer.js","components/TreatmentPageList.js","components/TreatmentRegister.js","components/AppointmentPage.js","components/AppointmentsList.js","components/MedicationCalculator/Header.js","components/MedicationCalculator/MedicationName.js","components/MedicationCalculator/MedicationColorSelector.js","components/MedicationCalculator/MedicationInstruction.js","components/MedicationCalculator/MedicationStartTiming.js","components/MedicationCalculator/ExampleGuideline.js","components/MedicationCalculator/MedicationCalculator.js","components/About.js","components/Navigator.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","props","image","className","alt","src","HomePage","Settings","medicationRegistered","samesite","map","item","color","name","renderMedicationRegistered","Button","classButton","nameButton","actionButton","disabled","onClick","TreatmentPage","classImage","titlePage","vowelsAndConsonants","to","Footer","target","rel","href","TreatmentPageList","flareTreatment","medicationName","sort","a","b","date","listDays","day","index","includes","push","getDate","monthIndex","getMonth","year","getFullYear","formatDate","Date","key","treatment","time","pill","renderListTreatment","TreatmentRegister","state","newMedication","buttonClickable","errorMessage","renderMedicationSelector","bind","handleNewMedication","regirterNewMedication","handleDeleteNewMedication","handleSaveMedication","handleClassButton","renderErrorMessage","actionSaveButton","renderNewMedicationName","medicationsTreatment","medication","value","event","currentTarget","this","setState","htmlFor","type","id","onChange","today","dd","String","padStart","mm","yyyy","alert","undefined","includeNewTreatment","React","Component","AppointmentPage","AppointmentsList","renderMonthName","MedicationName","placeholder","getInfoState","MedicationColorSelector","colorSelected","MedicationInstruction","medicationInstruction","MedicationStartTiming","firstDose","hours","i","hour","hourWithPad","ExampleGuideline","info","length","App","localStorageData","getData","_getInitialState","saveData","getDays","getHoursMedication","JSON","parse","localStorage","getItem","setItem","stringify","dayHours","dayHoursMedication","dayHoursList","parseInt","doses","numberOfDoses","dose","hoursNeed","listTimes","forEach","user","goodTime","infoState","timesMedication","actionColorSelector","About","Navigator","namePill","toLowerCase","newState","e","find","listMedication","object","newTreatment","listUpdated","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3210b2e2.chunk.js","sourcesContent":["import React from 'react';\nimport \"../stylesheets/Header.scss\"\n\n\nconst Header = (props) => {\n    const image = props.image;\n    return (\n        <header className=\"header\">\n            My Health Log <img alt=\"website logo\" src={image} className=\"heartLogo\"></img>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n// import Footer from './Footer';\n\nimport '../stylesheets/HomePage.scss'\n\nconst HomePage = () => {\n\n    return (\n        <div className=\"homeMain\">\n            <img src=\"https://laurapareja.github.io/My-Health-Log/images/wallpaper.png\" alt=\"homewallpaper\" className=\"homepage_img\"></img>\n        </div >\n    )\n}\n\nexport default HomePage;","import React from 'react';\n// import { Link } from \"react-router-dom\";\n// import Button from './Button';\nimport \"../stylesheets/Settings.scss\"\n\n\nconst renderMedicationRegistered = (medicationRegistered) => {\n    return medicationRegistered.medicationRegistered.map(item => {\n        return (\n            <div className=\"medicationContainer\">\n                <div className={`color ${item.color}`}></div>\n                <h4>{item.name}</h4>\n            </div>\n        )\n    })\n}\n\n\nconst Settings = (props) => {\n    const medicationRegistered = props;\n    return (\n        <div className=\"settings\">\n            <i className=\"fas fa-cog iconSettings\" samesite=\"none\"></i>\n            <h2 className=\"settings_title\">Settings</h2>\n            <h3 className=\"settings_title\">Medication Registered</h3>\n            {renderMedicationRegistered(medicationRegistered)}\n            {/* <Link to=\"/My-Health-Log/appointments\">\n                <Button nameButton=\"Back\" classButton={`treatmentPage_button buttonAppointment`} />\n            </Link> */}\n        </div >\n    )\n}\n\nexport default Settings;","import React from 'react';\n\nconst Button = (props) => {\n    const { classButton, nameButton, actionButton, disabled } = props;\n    return (\n        <button className={`button ${classButton}`} onClick={actionButton} disabled={disabled}>{nameButton}</button>\n    )\n}\n\nexport default Button;","import React from 'react';\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\nconst vowelsAndConsonants = (s) => {\n    //\n}\n\nconst TreatmentPage = (props) => {\n    const { classImage, image, titlePage } = props;\n\n    return (\n        <div className=\"main\">\n            {vowelsAndConsonants(\"javascriptloops\")}\n            <img src={image} alt=\"pill\" className={classImage}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n            <h3 className=\"main_subtitle\">Here you can register and see your flare-ups treatment</h3>\n            <div className=\"treatmentPage_button--container\">\n                <Link to=\"/My-Health-Log/treatmentList\">\n                    <Button nameButton=\"TREATMENT LIST\" classButton=\"treatmentPage_button\" />\n                </Link>\n                <Link to=\"/My-Health-Log/treatment/register\">\n                    <Button nameButton=\"REGISTER\" classButton=\"treatmentPage_button\" />\n                </Link>\n            </div>\n        </div >\n    )\n}\n\nexport default TreatmentPage;","import React from 'react';\nimport '../stylesheets/Footer.scss';\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p> &copy; 2019 / <a className=\"footer_link\" target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/laurapareja/\">Laura Pareja</a>/ Licencia</p>\n        </footer>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Footer from './Footer';\nimport \"../stylesheets/TreatmentPage.scss\"\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst renderListTreatment = (flareTreatment, medicationName) => {\n    flareTreatment.sort(function (a, b) {\n        if (a.date < b.date) {\n            return 1;\n        }\n        if (a.date > b.date) {\n            return -1;\n        }\n        return 0;\n    });\n    const listDays = [];\n\n    return flareTreatment.map((day, index) => {\n        if (listDays.includes(day.date) === false) {\n            listDays.push(day.date)\n            const formatDate = (date) => {\n                var monthNames = [\n                    \"January\", \"February\", \"March\",\n                    \"April\", \"May\", \"June\", \"July\",\n                    \"August\", \"September\", \"October\",\n                    \"November\", \"December\"\n                ];\n\n                var day = date.getDate();\n                var monthIndex = date.getMonth();\n                var year = date.getFullYear();\n\n                return day + ' ' + monthNames[monthIndex] + ' ' + year;\n            }\n            const date = formatDate(new Date(day.date))\n            return (\n                <div className=\"medication_dose--container\" key={index} >\n                    <h3 className=\"dateListItem\">{date}</h3>\n                    <div className=\"pillContainer\">\n                        <h4 className=\"doseTime\">{day.treatment[0].time} </h4>\n                        <div className=\"pill yellow\" ></div> <p className=\"pillName\">\n                            {day.treatment[0].pill}\n                        </p>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"medication_dose--container\" key={index} >\n                    <div className=\"pillContainer\">\n                        <h4 className=\"doseTime\">{day.treatment[0].time} </h4>\n                        <div className=\"pill yellow\" ></div> <p className=\"pillName\">\n                            {day.treatment[0].pill}\n                        </p>\n                    </div>\n                </div>\n            )\n        }\n    })\n}\n\n\n\nconst TreatmentPageList = (props) => {\n    const { flareTreatment, titlePage, image, classImage, medicationName } = props\n    return (\n        <div className=\"main\" >\n            <img src={image} alt=\"pill\" className={`treatmentPageListImp ${classImage}`}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n\n            <div>{renderListTreatment(flareTreatment, medicationName)}</div>\n\n            <Link to=\"/My-Health-Log/treatment\">\n                <Button nameButton=\"Back\" classButton=\"treatmentPage_button\" />\n            </Link>\n            <Footer />\n        </div>\n    )\n}\n\nexport default TreatmentPageList;\n","import React from 'react';\nimport Footer from './Footer';\nimport \"../stylesheets/TreatmentRegister.scss\"\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\nclass TreatmentRegister extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newMedication: false,\n            date: \"\",\n            time: \"\",\n            medicationName: \"\",\n            buttonClickable: true,\n            errorMessage: true,\n        }\n        this.renderMedicationSelector = this.renderMedicationSelector.bind(this);\n        this.handleNewMedication = this.handleNewMedication.bind(this);\n        this.regirterNewMedication = this.regirterNewMedication.bind(this);\n        this.handleDeleteNewMedication = this.handleDeleteNewMedication.bind(this);\n        this.handleSaveMedication = this.handleSaveMedication.bind(this);\n        this.handleClassButton = this.handleClassButton.bind(this);\n        this.renderErrorMessage = this.renderErrorMessage.bind(this);\n        this.actionSaveButton = this.actionSaveButton.bind(this);\n        this.renderNewMedicationName = this.renderNewMedicationName.bind(this);\n    }\n\n\n    renderMedicationSelector(medicationsTreatment) {\n        if (medicationsTreatment !== \"\") {\n            return medicationsTreatment.map((medication, index) => {\n                return <option key={index} name={medication.name} value={medication.name}>{medication.name}</option>\n            })\n        }\n\n    }\n    handleNewMedication(event) {\n        if (event.currentTarget.value === 'newMedication') {\n            return this.setState({\n                newMedication: true,\n            })\n        }\n    }\n    renderNewMedicationName(event) {\n        return this.setState({\n            medicationName: event.currentTarget.value,\n        })\n    }\n\n    regirterNewMedication() {\n        if (this.state.newMedication === true) {\n            return (\n                <div>\n                    <div className=\"inputMedicationTreatment_container \">\n                        <label htmlFor=\"medicationTreatment\" className=\"treatmentLabel\">Register new medication</label >\n                        <div className=\"inputContainerMedication\">\n\n                            <input type=\"text\" id=\"medicationTreatment\" className=\"inputTreatment\" onChange={this.renderNewMedicationName}></input>\n                            <i className=\"far fa-trash-alt iconInput iconInput_trash\" onClick={this.handleDeleteNewMedication}></i>\n                        </div>\n\n                    </div>\n                </div>)\n        }\n    }\n    handleSaveMedication(event) {\n        if (event.target.type === \"date\") {\n            let today = new Date();\n            const dd = String(today.getDate()).padStart(2, '0');\n            const mm = String(today.getMonth() + 1).padStart(2, '0');\n            const yyyy = today.getFullYear();\n\n            today = yyyy + '-' + mm + '-' + dd;\n\n            if (event.target.value <= today) {\n                this.setState({\n                    date: event.target.value,\n                })\n            } else {\n                alert('future dates are not available')\n                event.target.value = \"\";\n            }\n\n        } else if (event.target.type === \"time\") {\n            this.setState({\n                time: event.target.value,\n            })\n        } else {\n            this.setState({\n                medicationName: event.target.value,\n                errorMessage: false,\n                buttonClickable: false\n            })\n        }\n    }\n\n    handleClassButton() {\n        if (this.state.date === \"\" || this.state.date === undefined || this.state.time === \"\" || this.state.medicationName === \"\") {\n            return \"treatmentRegister_button--disable\"\n        } else {\n            return \"treatmentRegister_button--able\"\n        }\n    }\n\n    renderErrorMessage() {\n        if (this.state.errorMessage === true) {\n            return <div>Please complete all options</div>\n        }\n    }\n\n    handleDeleteNewMedication() {\n        this.setState({\n            newMedication: false\n        })\n    }\n\n    actionSaveButton(includeNewTreatment, state) {\n        if (this.state.buttonClickable === false) {\n            return includeNewTreatment(state)\n        }\n    }\n\n    render() {\n        const {\n            props,\n        } = this;\n\n        const { image, classImage, medicationName, includeNewTreatment } = props\n        if (this.state === null) {\n            return <p>Loading</p>\n        }\n        return (\n            <div className=\"main\" >\n                <img src={image} alt=\"pill\" className={`treatmentPageListImp ${classImage}`}></img>\n                <h2 className=\"main_title\">New Treatment</h2>\n                <form className=\"form\" onChange={this.handleSaveMedication}>\n                    <div className=\"inputDateTreatment_container\">\n                        <label htmlFor=\"dateTreatment\" className=\"treatmentLabel\">Date</label >\n                        <div className=\"inputContainer\">\n                            <i className=\"far fa-calendar-plus iconInput\"></i>\n                            <input type=\"date\" id=\"dateTreatment\" className=\"inputTreatment\" ></input>\n                        </div>\n                    </div>\n                    <div className=\"inputDateTreatment_container\">\n                        <label htmlFor=\"timeTreatment\" className=\"treatmentLabel\">Time</label>\n                        <div className=\"inputContainer\">\n                            <i className=\"far fa-clock iconInput\"></i>\n                            <input type=\"time\" id=\"timeTreatment\" className=\"inputTreatment inputTreatment_Time\" ></input>\n                        </div>\n                    </div>\n                    <div className=\"inputDateTreatment_container\">\n                        <label htmlFor=\"selectMedication\" className=\"treatmentLabel\">Medication</label>\n                        <div className=\"inputContainer\">\n                            <i className=\"fas fa-tablets iconInput\"></i>\n                            <select name=\"selectMedication\" id=\"selectMedication\" className=\"inputTreatment\" onChange={this.handleNewMedication} >\n                                <option name=\"\" value=\"\"></option>\n                                {this.renderMedicationSelector(medicationName)}\n                                <option name=\"newMedication\" value=\"newMedication\">new medication</option>\n                            </select>\n                        </div>\n                    </div>\n                    {this.regirterNewMedication()}\n                </form>\n\n                {this.renderErrorMessage()}\n                <Link to=\"/My-Health-Log/treatment\">\n                    <Button\n                        nameButton=\"Save\"\n                        classButton={this.handleClassButton()}\n                        actionButton={this.actionSaveButton(includeNewTreatment, this.state)}\n                        disabled={this.state.buttonClickable} />\n                </Link>\n\n                <Link to=\"/My-Health-Log/treatment\">\n                    <Button nameButton=\"Back\" classButton=\"treatmentPage_button\" />\n                </Link>\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default TreatmentRegister;","import React from 'react';\nimport Button from './Button';\nimport { Link } from \"react-router-dom\";\n\n\n\nconst AppointmentPage = (props) => {\n    const { classImage, image, titlePage } = props;\n\n    return (\n        <div className=\"main\">\n            <img src={image} alt=\"pill\" className={classImage}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n            <h3 className=\"main_subtitle\">Here you can register and see your doctor appointments</h3>\n            <div className=\"treatmentPage_button--container\">\n                <Link to=\"/My-Health-Log/appointmentsList\">\n                    <Button nameButton=\"APPOINTMENT LIST\" classButton=\"treatmentPage_button\" />\n                </Link>\n                <Button nameButton=\"REGISTER\" classButton=\"treatmentPage_button\" />\n            </div>\n        </div >\n    )\n}\n\nexport default AppointmentPage;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport Button from './Button';\nimport \"../stylesheets/Appointments.scss\"\n\nconst AppointmentsList = (props) => {\n    const { renderMonthName, classImage, image, titlePage } = props;\n\n    return (\n        <div className=\"main appointments\">\n            <img src={image} alt=\"appointment\" className={`treatmentPageListImp ${classImage}`}></img>\n            <h2 className=\"main_title\">{titlePage}</h2>\n            {renderMonthName}\n            <ul>\n                <li>Monday 21 October</li>\n                <li>Tuesday 22 October</li>\n                <li>Wednesday 23 October</li>\n                <li>Thursday 24 October</li>\n            </ul>\n            <Link to=\"/My-Health-Log/appointments\">\n                <Button nameButton=\"Back\" classButton={`treatmentPage_button buttonAppointment`} />\n            </Link>\n        </div >\n    )\n}\n\nexport default AppointmentsList;","import React from 'react';\n\nconst Header = (props) => {\n    const image = props.image;\n    return (\n        <header className=\"headerCalculator\">\n            <img className=\"calculator_picture\" src={image} alt=\"calculator\"></img>\n            <h2 className=\"main_title\">Doses Calculator</h2>\n        </header>\n    )\n}\n\nexport default Header;","import React from 'react';\n\nconst MedicationName = (props) => {\n    const { medicationName } = props;\n    const handleChange = (event) => {\n        const medicationName = 'medicationName';\n        props.getInfoState(event, medicationName)\n    }\n    return (\n        <main className=\"medicationName\">\n            <label className=\"inputContent\" htmlFor=\"medicationName\">Medication Name</label>\n            <input type=\"text\" id=\"medicationName\" placeholder=\"Name\" onChange={handleChange} value={medicationName}></input>\n        </main>\n    )\n}\n\nexport default MedicationName;","import React from 'react';\n\nconst MedicationColorSelector = (props) => {\n    const colorSelected = props.colorSelected;\n    const handleChange = (event) => {\n        const colorSelected = 'colorSelected';\n        props.getInfoState(event, colorSelected)\n    }\n    return (\n        <div className=\"inputContainer\">\n            <label className=\"inputContent\" htmlFor=\"medicationColor\">\n                Select a color\n            </label>\n            <select name=\"colors\" id=\"medicationColor\" onChange={handleChange} className={`${colorSelected} colorselector`} value={colorSelected}>\n                <option value=\"blue\" className=\"blue colorselector\"></option>\n                <option value=\"yellow\" className=\"yellow colorselector\" ></option>\n                <option value=\"orange\" className=\"orange colorselector\"></option>\n                <option value=\"purple\" className=\"purple colorselector\"></option>\n                <option value=\"green\" className=\"green colorselector\"></option>\n                <option value=\"red\" className=\"red colorselector\"></option>\n            </select>\n        </div>\n    )\n}\n\nexport default MedicationColorSelector;","import React from 'react';\n\nconst MedicationInstruction = (props) => {\n    const medicationInstruction = props.medicationInstruction;\n    const handleChange = (event) => {\n        const medicationInstruction = 'medicationInstruction';\n        props.getInfoState(event, medicationInstruction)\n    }\n    return (\n        <div className=\"inputContainer\">\n            <label htmlFor=\"medicationInstruction\" className=\"inputContent\">each</label>\n            <select name=\"guidelineDose\" id=\"guidelineDose\" onChange={handleChange} value={medicationInstruction}>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"6\">6</option>\n                <option value=\"8\">8</option>\n                <option value=\"12\">12</option>\n                <option value=\"24\">24</option>\n            </select>\n            <label htmlFor=\"medicationInstruction\">    hours</label>\n        </div>\n    )\n}\n\nexport default MedicationInstruction;","import React from 'react';\n\n\n\nconst MedicationStartTiming = (props) => {\n    const firstDose = props.firstDose;\n\n    const handleChange = (event) => {\n        const firstDose = 'firstDose';\n        props.getInfoState(event, firstDose)\n    }\n\n    const hours = []\n    for (let i = 0; i <= 24; i++) {\n        hours.push(i)\n    }\n\n    return (\n        <div className=\"inputContainer\" >\n            <label className=\"inputContent\" htmlFor=\"startTiming\">First Dose</label>\n            <select name=\"startTiming\" id=\"startTiming\" onChange={handleChange} value={firstDose}>\n                {hours.map((hour, index) => {\n                    let hourWithPad = `${hour}`\n                    if (hour < 10) {\n                        hourWithPad = `0${hour}`\n                    }\n                    return (<option key={index} value={hour}>{hourWithPad}:00</option>)\n                })}\n            </select>\n        </div>\n    )\n}\n\nexport default MedicationStartTiming;","import React from 'react';\n\nconst ExampleGuideline = (props) => {\n    const { info, color, medicationName } = props;\n    const renderName = (props) => {\n\n        if (info !== undefined && medicationName.length < 25) {\n            const name = info.map((time, index) => {\n                if (time < 10) {\n                    return (\n                        <div key={index} className=\"example__time--container\">\n                            <h4>0{time}:00 </h4>\n                            <div className={`hour ${color}`}></div>\n                            {medicationName}\n                        </div>\n                    )\n                } else {\n                    return (\n                        <div key={index} className=\"example__time--container\">\n                            <h4>{time}:00 </h4>\n                            <div className={`hour ${color}`}></div>\n                            {medicationName}\n                        </div>\n                    )\n                }\n            })\n            return name\n\n        } else if (medicationName.length > 25) {\n            return <div className=\"errorMedicationName\">Please use a shorter name</div>\n\n        } else if (info === undefined) {\n            return <div>Complete all of the options</div>\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"example__container\">\n                {renderName()}\n            </div>\n        </div>\n    )\n}\n\nexport default ExampleGuideline;","import React from \"react\";\nimport Header from \"./Header\";\nimport MedicationName from \"./MedicationName\";\nimport MedicationColorSelector from \"./MedicationColorSelector\";\n// import MedicationQuantitySelector from \"./MedicationQuantitySelector\";\nimport MedicationInstruction from \"./MedicationInstruction\";\nimport MedicationStartTiming from \"./MedicationStartTiming\";\nimport ExampleGuideline from \"./ExampleGuideline\";\nimport \"../../stylesheets/MedicationCalculator.scss\";\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const localStorageData = this.getData();\n    this.state = localStorageData === null\n      ? this._getInitialState()\n      : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n\n    this.getDays = this.getDays.bind(this);\n    this.getHoursMedication = this.getHoursMedication.bind(this);\n    this.getInfoState = this.getInfoState.bind(this);\n\n  }\n  componentDidMount() {\n    this.getDays();\n    this.saveData();\n\n  }\n  //obtengo los datos del localstorage\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoMedication\"));\n  }\n  //guardo los datos en el localstorage\n  saveData() {\n    localStorage.setItem(\"infoMedication\", JSON.stringify(this.state));\n  }\n\n\n  _getInitialState() {\n    return {\n      dayHours: [],\n      dayHoursMedication: [],\n      medicationName: \"\",\n      firstDose: '',\n      medicationInstruction: '',\n      colorSelected: \"\"\n    }\n  }\n\n  getDays() {\n    let dayHoursList = [];\n    for (let hour = 1; hour < 24; hour++) {\n      dayHoursList.push(hour);\n    }\n    return this.setState({\n      dayHours: dayHoursList\n    },\n      //guardo en localstorage\n      this.saveData\n    )\n  }\n  getHoursMedication() {\n\n    if (this.state.firstDose !== \"\" && this.state.medicationInstruction !== \"\") {\n      const firstDose = parseInt(this.state.firstDose);\n      const medicationInstruction = parseInt(this.state.medicationInstruction);\n      const doses = 24 / medicationInstruction;\n\n      let numberOfDoses = [];\n\n      for (let dose = 0; dose < doses; dose++) {\n        numberOfDoses.push(dose)\n      }\n\n      let hoursNeed = firstDose;\n      let listTimes = []\n\n      numberOfDoses.forEach((user) => {\n        if (user === 0) {\n          listTimes.push(hoursNeed)\n\n        } else {\n          const time = hoursNeed += medicationInstruction\n          if (time > 24) {\n            const goodTime = time - 24;\n            listTimes.push(goodTime)\n\n          } else {\n            listTimes.push(time)\n\n          }\n        }\n      })\n\n      return listTimes\n    }\n  }\n\n  getInfoState(event, infoState) {\n    this.setState({\n      [infoState]: event.currentTarget.value\n    },\n      //guardo en localstorage\n      this.saveData\n    )\n  }\n\n\n  render() {\n    const image = this.props.image;\n    const timesMedication = this.getHoursMedication()\n    const color = this.state.colorSelected;\n    const medicationName = this.state.medicationName;\n    this.props.actionColorSelector(color, medicationName);\n    if (this.state === null) {\n      return <p>Loading</p>\n    }\n    return (\n      <div className=\"mainCalculator\">\n        <Header image={image} />\n        <div className=\"mainCalculator_content\">\n          <div className=\"mainCalculator_inputsContainer\">\n            <MedicationName getInfoState={this.getInfoState} medicationName={this.state.medicationName} />\n            <MedicationColorSelector getInfoState={this.getInfoState} colorSelected={this.state.colorSelected} />\n            {/* <MedicationQuantitySelector /> */}\n            <MedicationStartTiming getInfoState={this.getInfoState} firstDose={this.state.firstDose} />\n            <MedicationInstruction getInfoState={this.getInfoState} medicationInstruction={this.state.medicationInstruction} />\n\n          </div>\n\n          <ExampleGuideline\n            info={timesMedication}\n            color={this.state.colorSelected}\n            medicationName={this.state.medicationName}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport \"../stylesheets/About.scss\"\n\n\nconst About = (props) => {\n    const { image } = props;\n\n    return (\n        <div className=\"mainAbout\">\n            <h2>About the project</h2>\n            <p>This is going to be a long project where I'm going to use all of my knowledge as a front-end developer. During Adalab's course, I had the idea to create this app, firstly as a way to keep learning, but little by little, this project has been growing as you can see.\nThe idea is to have an app where you can see all of the info related to your health. It can be usefull for you, to put some alarms to remember when you need to take the next medication, or for your doctor who can see quickly your health status. You can register your medication, flare-ups, symptomps, so It's easier to transmit all of this info to your doctor.\n</p>\n            <h2>About me</h2>\n\n            <img src={image} alt=\"laura\" className=\"aboutPicture\"></img>\n\n            <h3>Hi! I'm Laura Pareja</h3>\n\n            <p> I've always been interested in front-end development and I found the best moment with the bootcamp <a className=\"linkAdalab\" href=\"https://adalab.es\" target=\"_blank\" rel=\"noopener noreferrer\">Adalab</a>. For me, software is a new framework to express and improve my resolutive and creative skills.</p>\n            <div className=\"socialMedia_container\">\n\n\n                <a className=\"link\" href=\"https://www.linkedin.com/in/laurapareja/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-linkedin iconLink\"></i> /in/laurapareja</a>\n                <a className=\"link\" href=\"https://github.com/laurapareja\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github-square iconLink\"></i>            laurapareja</a>\n                <a className=\"link\" href=\"https://twitter.com/_laurapareja_\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-twitter-square iconLink\"></i> _laurapareja_</a>\n            </div>\n\n        </div >\n    )\n}\n\nexport default About;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"../stylesheets/Navigator.scss\"\n\nconst Navigator = () => {\n    return (\n        <div className=\"navigator\">\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/\"><i className=\"fas fa-home icon\" samesite=\"none\"></i>\n                Home</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/treatment\"><i className=\"fas fa-pills icon\" samesite=\"none\"></i>Treatment</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/appointments\"><i className=\"fas fa-calendar-check icon\" samesite=\"none\"></i>Appointments</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/calculator\"><i className=\"fas fa-clock icon\" samesite=\"none\"></i>Doses Calculator</Link>\n            <Link className=\"navigator_link\" to=\"/My-Health-Log/about\"><i className=\"fas fa-user icon\"></i>About</Link>\n            {/* <Link className=\"navigator_link\" to=\"/My-Health-Log/settings\"><i className=\"fas fa-cog icon\" samesite=\"none\"></i>Settings</Link> */}\n        </div>\n    )\n}\n\nexport default Navigator;","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './Header';\nimport HomePage from './HomePage';\nimport Settings from './Settings';\nimport TreatmentPage from \"./TreatmentPage\";\nimport TreatmentPageList from \"./TreatmentPageList\";\nimport TreatmentRegister from \"./TreatmentRegister\";\nimport AppointmentPage from './AppointmentPage';\nimport AppointmentsList from \"./AppointmentsList\";\nimport MedicationCalculator from './MedicationCalculator/MedicationCalculator';\nimport About from './About';\nimport Navigator from './Navigator';\nimport Footer from './Footer';\n\nimport \"../stylesheets/App.scss\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const localStorageData = this.getData();\n    this.state = localStorageData === null\n      ? {\n        flareTreatment: [],\n        colorSelected: '',\n        medicationRegistered: [\n          {\n            \"name\": \"paracetamol\",\n            \"color\": \"blue\"\n          }, {\n            \"name\": \"ibuprofeno\",\n            \"color\": \"yellow\"\n          }]\n      }\n      : localStorageData;\n\n    this.saveData = this.saveData.bind(this);\n    this.actionColorSelector = this.actionColorSelector.bind(this);\n    this.includeNewTreatment = this.includeNewTreatment.bind(this);\n  }\n  componentDidMount() {\n    this.getData();\n    this.saveData();\n  }\n  getData() {\n    return JSON.parse(localStorage.getItem(\"infoMyHealthRegister\"));\n  }\n  saveData() {\n    localStorage.setItem(\"infoMyHealthRegister\", JSON.stringify(this.state));\n  }\n\n  actionColorSelector(color, namePill) {\n    if (this.state.colorSelected !== color) {\n      this.setState({\n        colorSelected: color,\n      }, this.saveData\n      )\n    }\n    const pill = namePill.toLowerCase()\n    if (this.state.medicationName !== pill) {\n      this.setState({\n        medicationName: pill,\n      }, this.saveData\n      )\n    }\n  }\n  includeNewTreatment(newState) {\n    return (e) => {\n      const date = newState.date;\n      const time = newState.time;\n      const medicationName = newState.medicationName;\n\n      const listMedications = this.state.medicationRegistered.map(medication => {\n        return medication.name\n      })\n      if (listMedications.find(medication => {\n        return medication === medicationName\n      }) === undefined) {\n        const listMedication = [...this.state.medicationRegistered]\n        const object = { \"name\": medicationName, \"color\": \"yellow\" }\n\n\n\n        listMedication.push(object)\n        return this.setState({\n          medicationRegistered: listMedication\n        }, this.saveData\n        )\n      }\n\n      const newTreatment =\n      {\n        \"date\": date,\n        \"treatment\": [\n          {\n            \"time\": time,\n            \"pill\": medicationName\n          }\n        ]\n      };\n\n      const listUpdated = [...this.state.flareTreatment]\n      listUpdated.push(newTreatment)\n\n      return this.setState({\n        flareTreatment: listUpdated\n      }, this.saveData\n      )\n    }\n  }\n  render() {\n    if (this.state === null) {\n      return <p>Loading</p>\n    }\n    return (\n      <div className=\"body\" >\n        <Header image=\"https://laurapareja.github.io/My-Health-Log/images/heart.png\" />\n        <BrowserRouter>\n          <Route\n            exact\n            path=\"/My-Health-Log/\"\n            render={() => {\n              return <HomePage />;\n            }}\n          />\n          <Switch>\n            <Route\n              exact\n              path=\"/My-Health-Log/settings\"\n              render={() => {\n                return <Settings\n                  medicationRegistered={this.state.medicationRegistered}\n                />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/treatment\"\n              render={() => {\n                return <TreatmentPage\n                  titlePage=\"Treatment\"\n                  classImage=\"page_image\"\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/pills.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/treatmentList\"\n              render={() => {\n                return <TreatmentPageList\n                  flareTreatment={this.state.flareTreatment}\n                  titlePage=\"Treatment\"\n                  classImage=\"page_image\"\n                  medicationName={this.state.medicationRegistered}\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/pills.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/treatment/register\"\n              render={() => {\n                return <TreatmentRegister\n                  titlePage=\"Treatment\"\n                  classImage=\"page_image\"\n                  includeNewTreatment={this.includeNewTreatment}\n                  medicationName={this.state.medicationRegistered}\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/pills.png\" />;\n                ;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/appointments\"\n              render={() => {\n                return <AppointmentPage\n                  titlePage=\"Appointments\"\n                  classImage=\"page_image\"\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/doctorDates.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/appointmentsList\"\n              render={() => {\n                return <AppointmentsList\n                  titlePage=\"Appointments\"\n                  classImage=\"page_image\"\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/doctorDates.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/calculator\"\n              render={() => {\n                return <MedicationCalculator actionColorSelector={this.actionColorSelector}\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/alarm.png\" />;\n              }}\n            />\n            <Route\n              exact\n              path=\"/My-Health-Log/about\"\n              render={() => {\n                return <About\n                  image=\"https://laurapareja.github.io/My-Health-Log/images/laurapareja.png\" />;\n              }}\n            />\n          </Switch>\n          <Navigator />\n          <Footer />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}